; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]


[code]
var
  InstallModePage: TInputOptionWizardPage;

procedure InitializeWizard();
begin
  InstallModePage := CreateInputOptionPage(wpSelectDir, 'Installation Mode', 
    'Choose whether to install as client or server', 'Select the installation mode:', False, True);
  InstallModePage.Add('Client');
  InstallModePage.Add('Server');
end;

function GetInstallMode(): String;
begin
  if InstallModePage.SelectedValueIndex = 0 then
    Result := 'Client'
  else
    Result := 'Server';
end;

procedure UpdateConfigFile();
var
  ConfigFilePath: string;
  InstallMode: string;
begin
  ConfigFilePath := ExpandConstant('{app}\config.json');
  InstallMode := GetInstallMode();

  if InstallMode = 'Server' then
  begin
    SaveStringToFile(ConfigFilePath, '{ "mode": "server" }', False);
  end
  else
  begin
    SaveStringToFile(ConfigFilePath, '{ "mode": "client" }', False);
  end;
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  if CurStep = ssPostInstall then
  begin
    UpdateConfigFile();
    if GetInstallMode() = 'Server' then
    begin
      Exec(ExpandConstant('{app}\my_python_app.exe'), '--register-service', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
      Exec('sc', 'start MyPythonAppServer', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
    end;
  end;
end;
